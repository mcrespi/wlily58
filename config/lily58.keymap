/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/keys.h>

/ {
    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // ------------------------------------------------------------------------------------------------------------
            // |  ESC  |  1  |  2  |  3   |  4   |  5   |                   |  6   |  7    |  8    |  9   |   0   |   `   |
            // |  TAB  |  Q  |  W  |  E   |  R   |  T   |                   |  Y   |  U    |  I    |  O   |   P   |   -   |
            // |  CTRL |  A  |  S  |  D   |  F   |  G   |                   |  H   |  J    |  K    |  L   |   ;   |   '   |
            // | SHIFT |  Z  |  X  |  C   |  V   |  B   |   "["  |  |  "]"  |  N   |  M    |  ,    |  .   |   /   | SHIFT |
            //                     | ALT  | GUI  | LOWER|  SPACE |  | ENTER | RAISE| BSPC  | GUI   |

            bindings = <
&kp TAB    &kp N1  &kp N2  &kp N3        &kp N4    &kp N5                         &kp N6  &kp N7         &kp N8         &kp N9   &kp N0    &kp BACKSPACE
&kp TAB    &kp Q   &kp W   &kp E         &kp R     &kp T                          &kp Y   &kp U          &kp I          &kp O    &kp P     &kp BACKSPACE
&kp LSHFT  &kp A   &kp S   &kp D         &kp F     &kp G                          &kp H   &kp J          &kp K          &kp L    &kp SEMI  &kp SQT
&kp LCTRL  &kp Z   &kp X   &kp C         &kp V     &kp B   &kp LBKT     &kp RBKT  &kp N   &kp M          &kp COMMA      &kp DOT  &kp FSLH  &kp ESC
                           &kp LEFT_WIN  &kp LALT  &mo 2   &kp SPACE    &kp RET   &mo 1   &kp RIGHT_ALT  &kp RIGHT_WIN
            >;
        };

        lower_layer {
            // ------------------------------------------------------------------------------------------------------------
            // | BTCLR | BT1 | BT2 |  BT3 |  BT4 |  BT5 |                   |      |       |       |      |       |       |
            // |  F1   |  F2 |  F3 |  F4  |  F5  |  F6  |                   |  F7  |  F8   |  F9   |  F10 |  F11  |  F12  |
            // |   `   |  !  |  @  |  #   |  $   |  %   |                   |  ^   |  &    |  *    |  (   |   )   |   ~   |
            // |       |     |     |      |      |      |        |  |       |      |  _    |  +    |  {   |   }   |  "|"  |
            //                     |      |      |      |        |  |       |      |       |       |

            bindings = <
&bt BT_CLR  &bt BT_SEL 0      &bt BT_SEL 1       &bt BT_SEL 2       &bt BT_SEL 3  &bt BT_SEL 4                            &trans        &trans  &trans        &trans     &trans        &trans
&kp F1      &kp F2            &kp F3             &kp F4             &kp F5        &kp F6                                  &kp NUMBER_7  &kp N8  &kp N9        &kp EQUAL  &kp MINUS     &kp DELETE
&kp GRAVE   &kp EXCL          &kp AT             &kp HASH           &kp ASTRK     &kp LEFT_PARENTHESIS                    &kp NUMBER_4  &kp N5  &kp NUMBER_6  &kp N0     &kp UP_ARROW  &kp TILDE
&trans      &ext_power EP_ON  &ext_power EP_OFF  &ext_power EP_TOG  &kp UNDER     &kp EXCL              &trans    &trans  &kp N1        &kp N2  &kp N3        &kp LEFT   &kp DOWN      &kp RIGHT
                                                 &trans             &trans        &trans                &trans    &trans  &trans        &trans  &trans
            >;
        };

        raise_layer {
            // ------------------------------------------------------------------------------------------------------------
            // |       |     |     |      |      |      |                   |      |       |       |      |       |       |
            // |   `   |  1  |  2  |  3   |  4   |  5   |                   |  6   |   7   |   8   |  9   |   0   |       |
            // |   F1  |  F2 |  F3 |  F4  |  F5  |  F6  |                   |      |   <-  |   v   |  ^   |  ->   |       |
            // |   F7  |  F8 |  F9 |  F10 |  F11 |  F12 |        |  |       |  +   |   -   |   =   |  [   |   ]   |   \   |
            //                     |      |      |      |        |  |       |      |       |       |

            bindings = <
&trans            &trans          &trans      &trans      &trans             &trans                                  &trans        &trans        &trans        &trans        &trans        &trans
&kp C_PLAY_PAUSE  &kp C_PREVIOUS  &kp C_NEXT  &kp C_MUTE  &kp C_VOLUME_DOWN  &kp C_VOL_UP                            &kp NUMBER_7  &kp NUMBER_8  &kp NUMBER_9  &kp N9        &kp N0        &trans
&kp F1            &kp F2          &kp F3      &kp F4      &kp ASTRK          &kp LEFT_PARENTHESIS                    &kp NUMBER_4  &kp NUMBER_5  &kp NUMBER_6  &kp NUMBER_0  &kp UP_ARROW  &trans
&kp F7            &kp F8          &kp F9      &kp F10     &kp UNDER          &kp EXCL              &trans    &trans  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp LEFT      &kp DOWN      &kp RIGHT
                                              &trans      &trans             &trans                &trans    &trans  &trans        &trans        &trans
            >;
        };

        layer_3 {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans                    &trans                 &trans             &trans    &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans                    &kp RIGHT_PARENTHESIS  &kp DOUBLE_QUOTES  &kp PIPE  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans                    &kp AT                 &kp SINGLE_QUOTE   &kp BSLH  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans                 &trans             &trans    &trans  &trans  &trans
                        &trans  &trans  &trans  &trans    &trans  &trans                 &trans             &trans
            >;
        };

        layer_4 {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans                    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans                    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans                    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
                        &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans
            >;
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";

        layer-4 {
            if-layers = <1 2>;
            then-layer = <3>;
        };
    };
};
